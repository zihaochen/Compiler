<AST> 
		<VarDecl> 
			<IntType> 
			<Id: n> 
			<InitValue> 
				<IntConst: 1000> 
		<VarDecl> 
			<ArrayType> 
				<IntType> 
				<IntConst: 10000> 
			<Id: a> 
		<FunctionDef> 
			<VoidType> 
			<Id: exchange> 
				<VarDecl> 
					<IntType> 
					<Id: x> 
				<VarDecl> 
					<IntType> 
					<Id: y> 
					<VarDecl> 
						<IntType> 
						<Id: t> 
						<InitValue> 
							<UnaryExpr> 
								<ASTERISK> 
								<BinaryExpr> 
									<ADD> 
									<Id: a> 
									<Id: x> 
					<BinaryExpr> 
						<ASSIGN> 
						<UnaryExpr> 
							<ASTERISK> 
							<BinaryExpr> 
								<ADD> 
								<Id: a> 
								<Id: x> 
						<UnaryExpr> 
							<ASTERISK> 
							<BinaryExpr> 
								<ADD> 
								<Id: a> 
								<Id: y> 
					<BinaryExpr> 
						<ASSIGN> 
						<UnaryExpr> 
							<ASTERISK> 
							<BinaryExpr> 
								<ADD> 
								<Id: a> 
								<Id: y> 
						<Id: t> 
		<FunctionDef> 
			<IntType> 
			<Id: makeHeap> 
					<VarDecl> 
						<IntType> 
						<Id: i> 
					<VarDecl> 
						<IntType> 
						<Id: t> 
					<VarDecl> 
						<IntType> 
						<Id: j> 
					<BinaryExpr> 
						<ASSIGN> 
						<Id: i> 
						<BinaryExpr> 
							<DIV> 
							<BinaryExpr> 
								<SUB> 
								<Id: n> 
								<IntConst: 1> 
							<IntConst: 2> 
					<BinaryExpr> 
						<ASSIGN> 
						<Id: t> 
						<BinaryExpr> 
							<ASSIGN> 
							<Id: j> 
							<IntConst: 0> 
					<WhileLoop> 
						<BinaryExpr> 
							<GE> 
							<Id: i> 
							<IntConst: 0> 
								<BinaryExpr> 
									<ASSIGN> 
									<Id: j> 
									<BinaryExpr> 
										<MUL> 
										<Id: i> 
										<IntConst: 2> 
								<If> 
									<BinaryExpr> 
										<AND> 
										<BinaryExpr> 
											<LT> 
											<BinaryExpr> 
												<ADD> 
												<BinaryExpr> 
													<MUL> 
													<Id: i> 
													<IntConst: 2> 
												<IntConst: 1> 
											<Id: n> 
										<BinaryExpr> 
											<LT> 
											<ArrayAccess> 
												<Id: a> 
												<BinaryExpr> 
													<ADD> 
													<BinaryExpr> 
														<MUL> 
														<Id: i> 
														<IntConst: 2> 
													<IntConst: 1> 
											<ArrayAccess> 
												<Id: a> 
												<BinaryExpr> 
													<MUL> 
													<Id: i> 
													<IntConst: 2> 
									<BinaryExpr> 
										<ASSIGN> 
										<Id: j> 
										<BinaryExpr> 
											<ADD> 
											<BinaryExpr> 
												<MUL> 
												<Id: i> 
												<IntConst: 2> 
											<IntConst: 1> 
								<If> 
									<BinaryExpr> 
										<GT> 
										<ArrayAccess> 
											<Id: a> 
											<Id: i> 
										<ArrayAccess> 
											<Id: a> 
											<Id: j> 
											<FunctionCall> 
												<Id: exchange> 
												<ExprList> 
													<Id: i> 
													<Id: j> 
								<BinaryExpr> 
									<ASSIGN> 
									<Id: i> 
									<BinaryExpr> 
										<SUB> 
										<Id: i> 
										<IntConst: 1> 
					<ReturnStmt> 
						<IntConst: 0> 
		<FunctionDef> 
			<IntType> 
			<Id: adjustHeap> 
				<VarDecl> 
					<IntType> 
					<Id: n> 
					<VarDecl> 
						<IntType> 
						<Id: i> 
					<VarDecl> 
						<IntType> 
						<Id: j> 
					<VarDecl> 
						<IntType> 
						<Id: t> 
					<BinaryExpr> 
						<ASSIGN> 
						<Id: i> 
						<BinaryExpr> 
							<ASSIGN> 
							<Id: j> 
							<BinaryExpr> 
								<ASSIGN> 
								<Id: t> 
								<IntConst: 0> 
					<WhileLoop> 
						<BinaryExpr> 
							<LT> 
							<BinaryExpr> 
								<MUL> 
								<Id: i> 
								<IntConst: 2> 
							<Id: n> 
								<BinaryExpr> 
									<ASSIGN> 
									<Id: j> 
									<BinaryExpr> 
										<MUL> 
										<Id: i> 
										<IntConst: 2> 
								<If> 
									<BinaryExpr> 
										<AND> 
										<BinaryExpr> 
											<LT> 
											<BinaryExpr> 
												<ADD> 
												<BinaryExpr> 
													<MUL> 
													<Id: i> 
													<IntConst: 2> 
												<IntConst: 1> 
											<Id: n> 
										<BinaryExpr> 
											<LT> 
											<ArrayAccess> 
												<Id: a> 
												<BinaryExpr> 
													<ADD> 
													<BinaryExpr> 
														<MUL> 
														<Id: i> 
														<IntConst: 2> 
													<IntConst: 1> 
											<ArrayAccess> 
												<Id: a> 
												<BinaryExpr> 
													<MUL> 
													<Id: i> 
													<IntConst: 2> 
									<BinaryExpr> 
										<ASSIGN> 
										<Id: j> 
										<BinaryExpr> 
											<ADD> 
											<BinaryExpr> 
												<MUL> 
												<Id: i> 
												<IntConst: 2> 
											<IntConst: 1> 
								<If> 
									<BinaryExpr> 
										<GT> 
										<ArrayAccess> 
											<Id: a> 
											<Id: i> 
										<ArrayAccess> 
											<Id: a> 
											<Id: j> 
											<BinaryExpr> 
												<ASSIGN_XOR> 
												<ArrayAccess> 
													<Id: a> 
													<Id: i> 
												<ArrayAccess> 
													<Id: a> 
													<Id: j> 
											<BinaryExpr> 
												<ASSIGN_XOR> 
												<ArrayAccess> 
													<Id: a> 
													<Id: j> 
												<ArrayAccess> 
													<Id: a> 
													<Id: i> 
											<BinaryExpr> 
												<ASSIGN_XOR> 
												<ArrayAccess> 
													<Id: a> 
													<Id: i> 
												<ArrayAccess> 
													<Id: a> 
													<Id: j> 
											<BinaryExpr> 
												<ASSIGN> 
												<Id: i> 
												<Id: j> 
									<BreakStmt> 
					<ReturnStmt> 
						<IntConst: 0> 
		<FunctionDef> 
			<IntType> 
			<Id: heapSort> 
					<VarDecl> 
						<IntType> 
						<Id: t> 
					<VarDecl> 
						<IntType> 
						<Id: k> 
					<BinaryExpr> 
						<ASSIGN> 
						<Id: t> 
						<IntConst: 0> 
					<ForLoop> 
						<BinaryExpr> 
							<ASSIGN> 
							<Id: k> 
							<IntConst: 0> 
						<BinaryExpr> 
							<LT> 
							<Id: k> 
							<Id: n> 
						<BinaryExpr> 
							<ASSIGN> 
							<Id: k> 
							<BinaryExpr> 
								<ADD> 
								<Id: k> 
								<IntConst: 1> 
								<BinaryExpr> 
									<ASSIGN> 
									<Id: t> 
									<ArrayAccess> 
										<Id: a> 
										<IntConst: 0> 
								<BinaryExpr> 
									<ASSIGN> 
									<ArrayAccess> 
										<Id: a> 
										<IntConst: 0> 
									<ArrayAccess> 
										<Id: a> 
										<BinaryExpr> 
											<SUB> 
											<BinaryExpr> 
												<SUB> 
												<Id: n> 
												<Id: k> 
											<IntConst: 1> 
								<BinaryExpr> 
									<ASSIGN> 
									<ArrayAccess> 
										<Id: a> 
										<BinaryExpr> 
											<SUB> 
											<BinaryExpr> 
												<SUB> 
												<Id: n> 
												<Id: k> 
											<IntConst: 1> 
									<Id: t> 
								<FunctionCall> 
									<Id: adjustHeap> 
									<ExprList> 
										<BinaryExpr> 
											<SUB> 
											<BinaryExpr> 
												<SUB> 
												<Id: n> 
												<Id: k> 
											<IntConst: 1> 
								<FunctionCall> 
									<Id: printf> 
									<ExprList> 
										<StringConst: int heapSort: %d
> 
										<Id: k> 
					<ReturnStmt> 
						<IntConst: 0> 
		<FunctionDef> 
			<IntType> 
			<Id: main> 
					<VarDecl> 
						<IntType> 
						<Id: i> 
					<ForLoop> 
						<BinaryExpr> 
							<ASSIGN> 
							<Id: i> 
							<IntConst: 0> 
						<BinaryExpr> 
							<LT> 
							<Id: i> 
							<Id: n> 
						<BinaryExpr> 
							<ASSIGN> 
							<Id: i> 
							<BinaryExpr> 
								<ADD> 
								<Id: i> 
								<IntConst: 1> 
						<BinaryExpr> 
							<ASSIGN> 
							<ArrayAccess> 
								<Id: a> 
								<Id: i> 
							<Id: i> 
					<FunctionCall> 
						<Id: makeHeap> 
						<ExprList> 
					<FunctionCall> 
						<Id: printf> 
						<ExprList> 
							<StringConst: debug1
> 
					<FunctionCall> 
						<Id: heapSort> 
						<ExprList> 
					<FunctionCall> 
						<Id: printf> 
						<ExprList> 
							<StringConst: debug2
> 
					<ForLoop> 
						<BinaryExpr> 
							<ASSIGN> 
							<Id: i> 
							<IntConst: 0> 
						<BinaryExpr> 
							<LT> 
							<Id: i> 
							<Id: n> 
						<BinaryExpr> 
							<ASSIGN> 
							<Id: i> 
							<BinaryExpr> 
								<ADD> 
								<Id: i> 
								<IntConst: 1> 
						<FunctionCall> 
							<Id: printf> 
							<ExprList> 
								<StringConst: %d > 
								<ArrayAccess> 
									<Id: a> 
									<Id: i> 
					<FunctionCall> 
						<Id: printf> 
						<ExprList> 
							<StringConst: 
> 
					<ReturnStmt> 
						<IntConst: 0> 
